{"pageProps":{"note":{"id":"qtrfzf049hbfnae914162x4","title":"编译器","desc":"","updated":1696757511287,"created":1696756191696,"custom":{},"fname":"tags.编译器","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"2d1dcfefb35b08f727c163df93f41e77","links":[{"from":{"fname":"tags.ROCm学习","id":"3i91cpobhjev7je13stn8d0","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":29,"column":1,"offset":1369},"end":{"line":29,"column":5,"offset":1373},"indent":[]},"value":"tags.编译器"}],"anchors":{"gcc":{"type":"header","text":"GCC","value":"gcc","line":7,"column":0,"depth":1},"llvm架构":{"type":"header","text":"LLVM架构","value":"llvm架构","line":10,"column":0,"depth":1},"什么是clang":{"type":"header","text":"什么是Clang","value":"什么是clang","line":18,"column":0,"depth":1},"clang和llvm":{"type":"header","text":"Clang和LLVM","value":"clang和llvm","line":27,"column":0,"depth":1},"clang和gcc的区别":{"type":"header","text":"Clang和GCC的区别","value":"clang和gcc的区别","line":35,"column":0,"depth":1}},"children":[],"parent":"90k77c0ismmit0y8v4lmv1e","data":{}},"body":"<h1 id=\"编译器\">编译器<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#编译器\"></a></h1>\n<h1 id=\"gcc\">GCC<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#gcc\"></a></h1>\n<p>GCC（GNU Compiler Collection）是一套有GNU开发的编程语言编译器，以GPL及LGPL许可证所发行的自由软件。GCC原名为GNU C 语言编译器，它原本只能处理C语言，随着技术的发展，GCC很快地得到扩展，变得可以处理C++，之后可以处理的语言扩展到Fortran、Pascal、Objective-C、Java等。</p>\n<h1 id=\"llvm架构\">LLVM架构<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#llvm架构\"></a></h1>\n<p><img src=\"/images/LLVM%E6%9E%B6%E6%9E%84%E5%9B%BE.webp\"></p>\n<ul>\n<li>不同的前端后端使用统一的中间代码LLVM Intermediate Representation (LLVM IR)</li>\n<li>如果需要支持一种新的编程语言，那么只需要实现一个新的前端</li>\n<li>如果需要支持一种新的硬件设备，那么只需要实现一个新的后端</li>\n<li>优化阶段是一个通用的阶段，它针对的是统一的LLVM IR，不论是支持新的编程语言，还是支持新的硬件设备，都不需要对优化阶段做修改</li>\n<li>相比之下，GCC的前端和后端没分得太开，前端后端耦合在了一起。所以GCC为了支持一门新的语言，或者为了支持一个新的目标平台，就 变得特别困难</li>\n<li>LLVM现在被作为实现各种静态和运行时编译语言的通用基础结构(GCC家族、Java、.NET、Python、Ruby、Scheme、Haskell、D等)</li>\n</ul>\n<h1 id=\"什么是clang\">什么是Clang<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#什么是clang\"></a></h1>\n<p>LLVM项目的一个子项目，基于LLVM架构的C/C++/Objective-C编译器前端。\n相比于GCC，Clang具有如下优点\n编译速度快:在某些平台上，Clang的编译速度显著的快过GCC(Debug模式下编译OC速度比GGC快3倍)\n占用内存小:Clang生成的AST所占用的内存是GCC的五分之一左右\n模块化设计:Clang采用基于库的模块化设计，易于 IDE 集成及其他用途的重用\n诊断信息可读性强:在编译过程中，Clang 创建并保留了大量详细的元数据 (metadata)，有利于调试和错误报告\n设计清晰简单，容易理解，易于扩展增强</p>\n<h1 id=\"clang和llvm\">Clang和LLVM<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#clang和llvm\"></a></h1>\n<p><img src=\"/images/Clang%E5%92%8CLLVM.webp\"></p>\n<p>LLVM整体架构，前端用的是clang，广义的LLVM是指整个LLVM架构，一般狭义的LLVM指的是LLVM后端（包含代码优化和目标代码生成）。</p>\n<p>源代码（c/c++）经过clang--> 中间代码(经过一系列的优化，优化用的是Pass) --> 机器码\nCLang是一个由C++编写的编译器前端，能够编译C/C++/Objective等高级语言，属于LLVM的一部分，发布于BSD（自由软件中使用最广发的许可证之一）许可证下，其目的就是为了超越GCC。经过测试证明，Clang编译Objective-C代码的速度为GCC的3倍左右，同时它还能针对用户发生的编译错误准确地给出建议。</p>\n<h1 id=\"clang和gcc的区别\">Clang和GCC的区别<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#clang和gcc的区别\"></a></h1>\n<ul>\n<li>Clang比GCC编译用的时间更短，包括预处理、语法分析、解析、语义分析、抽象语法树生成的时间。</li>\n<li>Clang比GCC的内存占用更小。</li>\n<li>Clang生成的中间产物比GCC更小。</li>\n<li>Clang的错误提示比GCC更加友好。</li>\n<li>Clang有静态分析，GCC没有。</li>\n<li>Clang使用BSD许可证，GCC使用GPL许可证。</li>\n<li>Clang从一开始就被设计为一个API，允许它被源代码分析工具和IDE集成。GCC被构建成一个单一的静态编译器，这使得它非常难以被作为API并集成到其他工具中。</li>\n<li>GCC比Clang支持更多的语言，例如Java。</li>\n<li>GCC比Clang支持更多的平台。</li>\n<li>GCC比Clang更流行。</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a class=\"color-tag\" style=\"--tag-color: #1ef876;\" href=\"/notes/3i91cpobhjev7je13stn8d0\">ROCm学习</a></li>\n</ul>","noteIndex":{"id":"root","title":"root","desc":"","updated":1605266684036,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"b49e7e13a0c91addc8ab9ef97080cf1e","links":[],"anchors":{},"children":["uxohjdz88o8hep8cr7hffz8","kl9mhirw795hadbnwlddcfi","0dedulbxl7totmeo56j36ao","c1bs7wsjfbhb0zipaywqv1","90k77c0ismmit0y8v4lmv1e"],"parent":null,"data":{},"body":"\nThis is the root for your Dendron vault.\n\nIf you decide to publish your entire vault, it will be your landing page. You are free to customize any part of this page except the frontmatter at the top, between the `---`.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Sherry-yanqi.github.io/Dendron-Website/.","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}